<<Python 语言开发基础>>
ctrl+d(subl选取相同字母的光标)

Python运行
	1、python3 hello.py
	2、（前提：文件内加上#！ /usr/bin/python3）
	chomd u+x hello.py 之后用 ./hello.py

Python的交互提示模式
	退出：ctrl+d / exit
	# 井号开头，注释

进制：
	十进制：10，20，
	二进制： （0b开头，后面跟0～1）
	0b111；0b101；0b1111
	八进制： （0o开头，后面跟0～7）
	0o177 #127
	0o11  #9
	十六进制：（0x开头，后面给0～9，A～F，a～f）
	0x11 #17
	0xFF #255
	ox1234ABCD
进制转换：
	十进制（十进一）
	二进制（二进一）
	八进制（八进一）
	十六进制（十六进一）
	hex(i) 	将整数转换为十六进制字符串
	oct(i)	将整数转换为八进制字符串
	bin(i)	将整数转换为二进制字符串
数值类型：
	整数int；浮点数float；复数complex（real、image）；布尔类型

print()
	print(1+2)
	print("hello")
	print("1 + 2 =", 1 + 2)

序列赋值：
	x, y = 1, 2
	a, b = b, a
查看变量绑定关系：help('__main__')

is / is not
小整数池：（-5～256）	不会释放可以重复使用，而在之外的数可能False
id():查找内存地址
del():删除变量
引用计数

符合运算：
	y += x -- y = y + x

int(x, base=10) base是进制，默认是10

内建数值型函数：
	abs()
	round(x, ndigits) 四舍五入；ndigits正数时是向右取整的位数
	pow(x, y) x ** y

换行：
	显式换行 \
	隐式换行 括号内换行

基本输入输出函数：input(); print()
	s = input("请输入字符串:")
	print("您输入的字符串是:", s)
	print(1+int(s))
	-----------------
	print(value,value, seq=''（分隔符号默认空格）,end='\n')

if语句：
	elif可以有多个；else只能有一个；
	s = input("请再输入字符串:")
	j = int(s)
	if j > 100:
		print("Bigger than 100")
	elif 0 < j < 20:
		print("Between 0 and 20")
	else:
		print("Other")

条件表达式：
	商场促销满100减20
	money = int(input("请输入商品总额"))
	pay = money - 20 if money >= 100 else money
	print("您需要支付", pay, "元")

pass：填充空白用
	g = int(input("请输入学生的成绩"))
	if 0 <= g <= 100:
		psss
	else:print("不处于成绩范围")

布尔运算：
	not and or
	not True = False
	not 100 = False
布尔与操作：
	x and y
	True and True = True
	True and False = False
	100 or 200 = 100 （都为真优先返回左侧的）
	应用：
	sore = int(input("请输入成绩：") or '0')
	if score < 0 or score > 100:
		print("您的成绩不合法！！！")
	else:
		print("您输入的成绩是：", score)
正负号运算符：
	a = 5
	b = -a

str 字符串
	' 单引号
	" 双引号
	''' 三单引号
	""" 三双引号
	三引号字符串：
		三引号字符串换行会自动转换为换行符'\n'
		三引号内可以包含单引号和双引号
		print('Welcome to Beijing\nI like Python!\nI am learning!')
		s = '''Welcome to Beijing
		I like Python!
		I am learning!'''

用转移序列代表特殊字符
	\' \" \\ 
	\n \r(返回行首并替换) \f(换页) \t(水平制表符) \v(垂直制表符) 
	\b(倒退、删除) \0(空字符) 
	\0oo(oo为两位八进制表示的字符) 
	\xXX(XX为两位十六进制表示的字符)
	\uXXXX(Unicode16的十六进制表示的字符)
	
ASCII编码：man ascii (八进制十六进制都可以表示)
	常用ASCII：
	字符  十进制  十六进制
	'0'   48      0x30
	'A'   65      0x41
	'a'   97      0x61  
	ord(c) 返回一个字符串的Unicode
	chr(i) 返回i这个值所对应的字符
	print(ord('A')) # 65
	print(ord('中'))# 20013

raw 字符串：让转义字符\无效
	a = 'C:\newfile\test.py'
	print(a)
	print(len(a))
	a = r'C:\newfile\test.py'
	print(a)
	print(len(a))

字符串的运算：
	+ += * *=
	x = 'abcd' = 'efg'
	print(x) 	# abcdefg
	x += '123'  # abcdefg123
	--------------------------
	x = '123'
	y = x * 2 # y = '123123'
	--------------------------
	> >= < <= == !=

in / not in :用于序列、字典、集合，判断某个值是否在该容器中返回TF
	s = 'Welcome to Ningbo!'
	'to' in s #True

index 索引
	s[0] = s[-len(s)] # W
	最后一个s[len(s) - 1] = s[-1]

slice 切片
	[开始：结束：步长]
	默认：[0:len(s):1]
	反向：[::-1]

常用的序列函数：
	len(seq) 返回序列长度
	max(x)   返回序列最大值元素
	min(x)    返回序列最小值元素
	
整数转换为字符串函数
	hex(i) 	将整数转换为十六进制字符串
	oct(i)	将整数转换为八进制字符串
	bin(i)	将整数转换为二进制字符串

str() 转换为字符串

常见的字符串方法：
	对象.方法名()
	'abc'.isalpha()
	if 'abc'.isalpha():
		print("True")
	s.center(30, '#') #给出宽度居中 默认为空格
	s.count('A', 3, 5) #返回3到5的A个数
	s.find()
	s.strip() #去掉左右侧空白字符，lstrip，rstrip
	s.upper() #返回大写
	s.lower() #返回小写
	s.replace(old, new, 个数)
	s.startwith() #判断开头
	s.endwith() #判断结尾
	s.title() #将开头变成大写

字符串格式化表达式：
	% 类型码
	fmt = "姓名:%s, 年龄:%d"
	name = input("请输入姓名：")
	age = int(input("请输入年龄："))
	s = fmt % (name, age)
	print(s)
	占位符		意义
	%s 			字符串用str转换
	%r 			字符串用repr转换
	%c 			整数转换为单个字符
	%d 			十进制整数
	%o 			八进制整数
	%x 			十六进制整数（a-f小写）
	%X 			十六进制整数（a-f大写）
	%e 			指数型浮点数（e小写）
	%E 			指数型浮点数（E大写）
	%f 			浮点十进制
	%g 			自动转换指数
	%% 			%

Format函数格式化字符串
	s = "I love {}".format("WW")
	print(s)
	s1 = "I love {0} and {1}".format("haha",99)
	s2 = "haha {0}"
	s2.format("shibushi")

占位符和类型码之间的各式语法
	% [各式语法] 类型码
	- 左对齐
	+ 显示正号
	0 补零
	宽度（整数）
	宽度.精度(整数)
	例如：
		'%10d' % 123 # '          123'
		'%-+10d'% 123 # '+123          '
		'%010d'% 123 # '0000000000123'
		'%7.3f' % 3.1415926

循环语句while
	while 真表达式:
		语句
	else:
		语句
	i = 1
	while i < 5:
		print("Hello World!")
		i += 1
	else:
		print("条件不足，此时变量i=%d，循环结束"%i)

break语句：
	用于while、for语句中止当前循环的语句，常常和if连用
	i = 1
	while i <= 6:
		print("本次循环开始时：", i)
		if i ==3:
			break
		print("本次循环结束时：", i)
		i += 1

for 语句：
	for 变量列表 in 可迭代对象：
		语句快1
	else: (结束循环后)
		语句快2

range函数：
	range(stop) 从零开始，每次生成一个整数后加一，直到stop
	rang(start, stop, step)
	整数序列生成器，可迭代对象
	不包括最后一项

continue语句：
	用作循环语句while、for中，不再执行本次循环内continue语句，重新开始一次新的循环
	1、在while中，会跳到真值表达式重新判断
	2、在for中，会从迭代对象取下一个元素
	for x in range(5):
		if x == 2:
			continue
		print(x)

python中的序列类型（sequence）
	字符串 str
	列表 list
	元组 tuple
	字节串 bytes
	字节数组 bytearray

list列表：
	L = [] # 空列表
	L = [1, 2, 3, 4]
	L = ["北京", "上海", "重庆"]
	L = [1, 'two', 3, '四']
	L = [1, 2, [3.1, 3.2, 3.3], 4]
	构造函数：list()
	L = list(range(1, 10, 2))
	L = list("ABCD")

list运算：
	+ += * *=
	x = [1, 2, 3]
	y = [4, 5, 6]
	z = x + y  (拼接)
	x += [4,5,6] -> [1,2,3,4,5,6]
	x += 'ABC'   -> 
	x *= 用于生成重复的列表
	x = [1, 2]
	x *= 3 # x = [1,2,1,2,1,2]

	比较运算
	< <= > >=  == !=
	in / not in
	判断一个数据元素是否怒在容器（列表内）

索引 index / slice
	取值、赋值
	切片取值
	x = list(range(9))
	y = x[1:9:2] # y = [1, 3, 5, 7]
	切片赋值
	L = [2, 3, 4]
	L[0:1] = [1.1, 2.2] -> [1.1, 2.2, 3, 4]
	L[1:2] = [1.1, 2.2] -> 
	L[1:2] = [] 
	del 列表元素删除
		del 列表[index/slice]

常用的序列函数：
	len(x) 
	max(x)
	min(x)
	sum(x)
	any(x) 真值测试，如果列表中其中有一个值为真
	all(x) 所有都为真值

List 方法
	L.index() 查询元素的索引下标
	L.insert(x,y) x索引 y内容
	L.count(x) 返回列表中x的个数
	L.remove(x)删除第一次出现的x值
	L.copy() 复制列表
	L.append() 在列表中追加单个元素（排在最后）
	L.extend() 追加一个列表，依次放入，类似 L+=
	L.clear() 清空
	L.sort(reverse=False) 按元素进行排序，默认为从小到大升序
	L.reverse() 反转顺序
	L.pop([index]) 删除元素，默认最后一个，会返回值

字符串文本解析方法split和join
	S.split(sep=None) 	使用sep作为分隔符，返回分割后的字符串列表
	S.join(interable)   使用可迭代对象的字符串，返回一个中间用S进行分割的字符串
	s = 'Beijing is capital'
	L = s.split() ->['Beijing', 'is', 'captial']

	s = '\\'
	L = ['C:', 'Programe files', 'python3']
	s2 = s.join(L) -> s2 = 'C:\\Programe files\\python3'

深拷贝deep copy；浅拷贝shallow copy
	浅拷贝：复制过程中一层变量
	L  = [3.1, 3.2]
	L1 = [1, 2, L]
	L2 = L1.copy   浅拷贝，改变L2[2][0]，L也会改变
	import copy
	L2 = copy.deepcopy(L1) 深拷贝

列表推导式：lsit comprehension
	用迭代对象依次生成带有多个元素的列表的表达式
	[表达式 for 变量 in 可迭代对象]
	[表达式 for 变量 in 可迭代对象 if 真值表达式]
	例子：
	L = [x*x for x in range(1, 10)]
	L = [i for i in range(1,100,2)] #打印出1-100以内的奇数
	L = [i for i in range(1,100) if x % 2 ==1] #同上！！
	--------------
	嵌套
	[表达式1 for v1 in 迭代1 if 真表1 
				for v2 迭代2 if 真表2 ……]
	例子：
	L1 = [2, 3, 5]
	L2 = [7, 11, 13]
	将L1中的全部元素与L2中的全部元素一次相乘后放到L3中
	L3 = [x * y for x in L1 for y in L2]
	print(L3)

函数
	函数需要先定义，调用函数
	参数：负责函数传递一些信息
		普通参数：定义的时候直接定义变量名
		默认参数：def reg(name, age, gender='male'):
		关键字参数：
	返回值return：函数的执行结果











	






















